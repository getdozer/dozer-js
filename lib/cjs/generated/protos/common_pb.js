// source: common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var jspb = require('google-protobuf');
var goog = jspb;
var global = (function () { return this || window || global || self || Function('return this')(); }).call(null);
var types_pb = require('./types_pb.js');
goog.object.extend(proto, types_pb);
goog.exportSymbol('proto.dozer.common.CountResponse', null, global);
goog.exportSymbol('proto.dozer.common.GetEndpointsRequest', null, global);
goog.exportSymbol('proto.dozer.common.GetEndpointsResponse', null, global);
goog.exportSymbol('proto.dozer.common.GetFieldsRequest', null, global);
goog.exportSymbol('proto.dozer.common.GetFieldsResponse', null, global);
goog.exportSymbol('proto.dozer.common.OnEventRequest', null, global);
goog.exportSymbol('proto.dozer.common.QueryRequest', null, global);
goog.exportSymbol('proto.dozer.common.QueryResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dozer.common.QueryRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dozer.common.QueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dozer.common.QueryRequest.displayName = 'proto.dozer.common.QueryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dozer.common.CountResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dozer.common.CountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dozer.common.CountResponse.displayName = 'proto.dozer.common.CountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dozer.common.OnEventRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dozer.common.OnEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dozer.common.OnEventRequest.displayName = 'proto.dozer.common.OnEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dozer.common.GetFieldsRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dozer.common.GetFieldsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dozer.common.GetFieldsRequest.displayName = 'proto.dozer.common.GetFieldsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dozer.common.GetFieldsResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dozer.common.GetFieldsResponse.repeatedFields_, null);
};
goog.inherits(proto.dozer.common.GetFieldsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dozer.common.GetFieldsResponse.displayName = 'proto.dozer.common.GetFieldsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dozer.common.QueryResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dozer.common.QueryResponse.repeatedFields_, null);
};
goog.inherits(proto.dozer.common.QueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dozer.common.QueryResponse.displayName = 'proto.dozer.common.QueryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dozer.common.GetEndpointsRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dozer.common.GetEndpointsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dozer.common.GetEndpointsRequest.displayName = 'proto.dozer.common.GetEndpointsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dozer.common.GetEndpointsResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dozer.common.GetEndpointsResponse.repeatedFields_, null);
};
goog.inherits(proto.dozer.common.GetEndpointsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dozer.common.GetEndpointsResponse.displayName = 'proto.dozer.common.GetEndpointsResponse';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dozer.common.QueryRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.dozer.common.QueryRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dozer.common.QueryRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dozer.common.QueryRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            endpoint: jspb.Message.getFieldWithDefault(msg, 1, ""),
            query: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dozer.common.QueryRequest}
 */
proto.dozer.common.QueryRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dozer.common.QueryRequest;
    return proto.dozer.common.QueryRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dozer.common.QueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dozer.common.QueryRequest}
 */
proto.dozer.common.QueryRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setEndpoint(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setQuery(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dozer.common.QueryRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dozer.common.QueryRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dozer.common.QueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dozer.common.QueryRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getEndpoint();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * optional string endpoint = 1;
 * @return {string}
 */
proto.dozer.common.QueryRequest.prototype.getEndpoint = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dozer.common.QueryRequest} returns this
 */
proto.dozer.common.QueryRequest.prototype.setEndpoint = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string query = 2;
 * @return {string}
 */
proto.dozer.common.QueryRequest.prototype.getQuery = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dozer.common.QueryRequest} returns this
 */
proto.dozer.common.QueryRequest.prototype.setQuery = function (value) {
    return jspb.Message.setField(this, 2, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.dozer.common.QueryRequest} returns this
 */
proto.dozer.common.QueryRequest.prototype.clearQuery = function () {
    return jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dozer.common.QueryRequest.prototype.hasQuery = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dozer.common.CountResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.dozer.common.CountResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dozer.common.CountResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dozer.common.CountResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            count: jspb.Message.getFieldWithDefault(msg, 1, 0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dozer.common.CountResponse}
 */
proto.dozer.common.CountResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dozer.common.CountResponse;
    return proto.dozer.common.CountResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dozer.common.CountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dozer.common.CountResponse}
 */
proto.dozer.common.CountResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setCount(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dozer.common.CountResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dozer.common.CountResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dozer.common.CountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dozer.common.CountResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCount();
    if (f !== 0) {
        writer.writeUint64(1, f);
    }
};
/**
 * optional uint64 count = 1;
 * @return {number}
 */
proto.dozer.common.CountResponse.prototype.getCount = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.dozer.common.CountResponse} returns this
 */
proto.dozer.common.CountResponse.prototype.setCount = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dozer.common.OnEventRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.dozer.common.OnEventRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dozer.common.OnEventRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dozer.common.OnEventRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            endpointsMap: (f = msg.getEndpointsMap()) ? f.toObject(includeInstance, proto.dozer.types.EventFilter.toObject) : []
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dozer.common.OnEventRequest}
 */
proto.dozer.common.OnEventRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dozer.common.OnEventRequest;
    return proto.dozer.common.OnEventRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dozer.common.OnEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dozer.common.OnEventRequest}
 */
proto.dozer.common.OnEventRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = msg.getEndpointsMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.dozer.types.EventFilter.deserializeBinaryFromReader, "", new proto.dozer.types.EventFilter());
                });
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dozer.common.OnEventRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dozer.common.OnEventRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dozer.common.OnEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dozer.common.OnEventRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getEndpointsMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.dozer.types.EventFilter.serializeBinaryToWriter);
    }
};
/**
 * map<string, dozer.types.EventFilter> endpoints = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.dozer.types.EventFilter>}
 */
proto.dozer.common.OnEventRequest.prototype.getEndpointsMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.dozer.types.EventFilter>} */ (jspb.Message.getMapField(this, 1, opt_noLazyCreate, proto.dozer.types.EventFilter));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.dozer.common.OnEventRequest} returns this
 */
proto.dozer.common.OnEventRequest.prototype.clearEndpointsMap = function () {
    this.getEndpointsMap().clear();
    return this;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dozer.common.GetFieldsRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.dozer.common.GetFieldsRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dozer.common.GetFieldsRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dozer.common.GetFieldsRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            endpoint: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dozer.common.GetFieldsRequest}
 */
proto.dozer.common.GetFieldsRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dozer.common.GetFieldsRequest;
    return proto.dozer.common.GetFieldsRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dozer.common.GetFieldsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dozer.common.GetFieldsRequest}
 */
proto.dozer.common.GetFieldsRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setEndpoint(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dozer.common.GetFieldsRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dozer.common.GetFieldsRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dozer.common.GetFieldsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dozer.common.GetFieldsRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getEndpoint();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string endpoint = 1;
 * @return {string}
 */
proto.dozer.common.GetFieldsRequest.prototype.getEndpoint = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dozer.common.GetFieldsRequest} returns this
 */
proto.dozer.common.GetFieldsRequest.prototype.setEndpoint = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dozer.common.GetFieldsResponse.repeatedFields_ = [1, 2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dozer.common.GetFieldsResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.dozer.common.GetFieldsResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dozer.common.GetFieldsResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dozer.common.GetFieldsResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            primaryIndexList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
            fieldsList: jspb.Message.toObjectList(msg.getFieldsList(), types_pb.FieldDefinition.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dozer.common.GetFieldsResponse}
 */
proto.dozer.common.GetFieldsResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dozer.common.GetFieldsResponse;
    return proto.dozer.common.GetFieldsResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dozer.common.GetFieldsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dozer.common.GetFieldsResponse}
 */
proto.dozer.common.GetFieldsResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
                for (var i = 0; i < values.length; i++) {
                    msg.addPrimaryIndex(values[i]);
                }
                break;
            case 2:
                var value = new types_pb.FieldDefinition;
                reader.readMessage(value, types_pb.FieldDefinition.deserializeBinaryFromReader);
                msg.addFields(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dozer.common.GetFieldsResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dozer.common.GetFieldsResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dozer.common.GetFieldsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dozer.common.GetFieldsResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getPrimaryIndexList();
    if (f.length > 0) {
        writer.writePackedInt32(1, f);
    }
    f = message.getFieldsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, types_pb.FieldDefinition.serializeBinaryToWriter);
    }
};
/**
 * repeated int32 primary_index = 1;
 * @return {!Array<number>}
 */
proto.dozer.common.GetFieldsResponse.prototype.getPrimaryIndexList = function () {
    return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<number>} value
 * @return {!proto.dozer.common.GetFieldsResponse} returns this
 */
proto.dozer.common.GetFieldsResponse.prototype.setPrimaryIndexList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.dozer.common.GetFieldsResponse} returns this
 */
proto.dozer.common.GetFieldsResponse.prototype.addPrimaryIndex = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dozer.common.GetFieldsResponse} returns this
 */
proto.dozer.common.GetFieldsResponse.prototype.clearPrimaryIndexList = function () {
    return this.setPrimaryIndexList([]);
};
/**
 * repeated dozer.types.FieldDefinition fields = 2;
 * @return {!Array<!proto.dozer.types.FieldDefinition>}
 */
proto.dozer.common.GetFieldsResponse.prototype.getFieldsList = function () {
    return /** @type{!Array<!proto.dozer.types.FieldDefinition>} */ (jspb.Message.getRepeatedWrapperField(this, types_pb.FieldDefinition, 2));
};
/**
 * @param {!Array<!proto.dozer.types.FieldDefinition>} value
 * @return {!proto.dozer.common.GetFieldsResponse} returns this
*/
proto.dozer.common.GetFieldsResponse.prototype.setFieldsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.dozer.types.FieldDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dozer.types.FieldDefinition}
 */
proto.dozer.common.GetFieldsResponse.prototype.addFields = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.dozer.types.FieldDefinition, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dozer.common.GetFieldsResponse} returns this
 */
proto.dozer.common.GetFieldsResponse.prototype.clearFieldsList = function () {
    return this.setFieldsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dozer.common.QueryResponse.repeatedFields_ = [1, 2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dozer.common.QueryResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.dozer.common.QueryResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dozer.common.QueryResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dozer.common.QueryResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            fieldsList: jspb.Message.toObjectList(msg.getFieldsList(), types_pb.FieldDefinition.toObject, includeInstance),
            recordsList: jspb.Message.toObjectList(msg.getRecordsList(), types_pb.RecordWithId.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dozer.common.QueryResponse}
 */
proto.dozer.common.QueryResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dozer.common.QueryResponse;
    return proto.dozer.common.QueryResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dozer.common.QueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dozer.common.QueryResponse}
 */
proto.dozer.common.QueryResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new types_pb.FieldDefinition;
                reader.readMessage(value, types_pb.FieldDefinition.deserializeBinaryFromReader);
                msg.addFields(value);
                break;
            case 2:
                var value = new types_pb.RecordWithId;
                reader.readMessage(value, types_pb.RecordWithId.deserializeBinaryFromReader);
                msg.addRecords(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dozer.common.QueryResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dozer.common.QueryResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dozer.common.QueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dozer.common.QueryResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getFieldsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, types_pb.FieldDefinition.serializeBinaryToWriter);
    }
    f = message.getRecordsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, types_pb.RecordWithId.serializeBinaryToWriter);
    }
};
/**
 * repeated dozer.types.FieldDefinition fields = 1;
 * @return {!Array<!proto.dozer.types.FieldDefinition>}
 */
proto.dozer.common.QueryResponse.prototype.getFieldsList = function () {
    return /** @type{!Array<!proto.dozer.types.FieldDefinition>} */ (jspb.Message.getRepeatedWrapperField(this, types_pb.FieldDefinition, 1));
};
/**
 * @param {!Array<!proto.dozer.types.FieldDefinition>} value
 * @return {!proto.dozer.common.QueryResponse} returns this
*/
proto.dozer.common.QueryResponse.prototype.setFieldsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.dozer.types.FieldDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dozer.types.FieldDefinition}
 */
proto.dozer.common.QueryResponse.prototype.addFields = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dozer.types.FieldDefinition, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dozer.common.QueryResponse} returns this
 */
proto.dozer.common.QueryResponse.prototype.clearFieldsList = function () {
    return this.setFieldsList([]);
};
/**
 * repeated dozer.types.RecordWithId records = 2;
 * @return {!Array<!proto.dozer.types.RecordWithId>}
 */
proto.dozer.common.QueryResponse.prototype.getRecordsList = function () {
    return /** @type{!Array<!proto.dozer.types.RecordWithId>} */ (jspb.Message.getRepeatedWrapperField(this, types_pb.RecordWithId, 2));
};
/**
 * @param {!Array<!proto.dozer.types.RecordWithId>} value
 * @return {!proto.dozer.common.QueryResponse} returns this
*/
proto.dozer.common.QueryResponse.prototype.setRecordsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.dozer.types.RecordWithId=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dozer.types.RecordWithId}
 */
proto.dozer.common.QueryResponse.prototype.addRecords = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.dozer.types.RecordWithId, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dozer.common.QueryResponse} returns this
 */
proto.dozer.common.QueryResponse.prototype.clearRecordsList = function () {
    return this.setRecordsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dozer.common.GetEndpointsRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.dozer.common.GetEndpointsRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dozer.common.GetEndpointsRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dozer.common.GetEndpointsRequest.toObject = function (includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dozer.common.GetEndpointsRequest}
 */
proto.dozer.common.GetEndpointsRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dozer.common.GetEndpointsRequest;
    return proto.dozer.common.GetEndpointsRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dozer.common.GetEndpointsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dozer.common.GetEndpointsRequest}
 */
proto.dozer.common.GetEndpointsRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dozer.common.GetEndpointsRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dozer.common.GetEndpointsRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dozer.common.GetEndpointsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dozer.common.GetEndpointsRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dozer.common.GetEndpointsResponse.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dozer.common.GetEndpointsResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.dozer.common.GetEndpointsResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dozer.common.GetEndpointsResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dozer.common.GetEndpointsResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            endpointsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dozer.common.GetEndpointsResponse}
 */
proto.dozer.common.GetEndpointsResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dozer.common.GetEndpointsResponse;
    return proto.dozer.common.GetEndpointsResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dozer.common.GetEndpointsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dozer.common.GetEndpointsResponse}
 */
proto.dozer.common.GetEndpointsResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addEndpoints(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dozer.common.GetEndpointsResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dozer.common.GetEndpointsResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dozer.common.GetEndpointsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dozer.common.GetEndpointsResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getEndpointsList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
};
/**
 * repeated string endpoints = 1;
 * @return {!Array<string>}
 */
proto.dozer.common.GetEndpointsResponse.prototype.getEndpointsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.dozer.common.GetEndpointsResponse} returns this
 */
proto.dozer.common.GetEndpointsResponse.prototype.setEndpointsList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dozer.common.GetEndpointsResponse} returns this
 */
proto.dozer.common.GetEndpointsResponse.prototype.addEndpoints = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dozer.common.GetEndpointsResponse} returns this
 */
proto.dozer.common.GetEndpointsResponse.prototype.clearEndpointsList = function () {
    return this.setEndpointsList([]);
};
goog.object.extend(exports, proto.dozer.common);
